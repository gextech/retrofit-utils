import java.text.SimpleDateFormat

buildscript {
  repositories {

    jcenter()
  }
  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
  }
}

plugins {
  id 'net.researchgate.release' version '2.0.2'
}


apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'


group = project.groupId
version = project.version

sourceCompatibility = project.javaVersion
targetCompatibility = project.javaVersion

repositories {
  jcenter()
}

dependencies {

  compile ("org.codehaus.groovy:groovy-all:${project.groovyVersion}")

  compile "com.squareup.retrofit:retrofit:${project.retrofitVersion}"
  compile "com.squareup.okhttp:okhttp:${project.okhttpVersion}"
  compile "com.squareup.okhttp:okhttp-urlconnection:${project.okhttpVersion}"
  compile "io.reactivex:rxjava:${project.rxjavaVersion}"
  compile "com.google.code.gson:gson:${project.gsonVersion}"


  compile 'org.projectlombok:lombok:1.14.8'

  testCompile ("org.spockframework:spock-core:${project.spockVersion}")
  testCompile "org.spockframework:spock-spring:${project.spockVersion}"
  testCompile "org.springframework.boot:spring-boot-starter-test:${project.springBootVersion}"
  testCompile ("org.spockframework:spock-core:${project.spockVersion}")
}

Date buildTimeAndDate = new Date()
ext {
  buildDate = new SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
  buildTime = new SimpleDateFormat('hh:mm aa').format(buildTimeAndDate)
}

def jarManifestAttributes = [
  'Built-By'  : System.properties['user.name'],
  'Created-By': System.properties['java.version'] + ' (' + System.properties['java.vendor'] + ' ' + System.getProperty("java.vm.version") + ")",
  'Build-Date': buildDate,
  'Build-Time': buildTime]

jar {
  manifest {
    attributes(jarManifestAttributes)
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives sourcesJar
}

jacocoTestReport {
  reports {
    xml.enabled = true // coveralls plugin depends on xml format report
    html.enabled = true
  }
}
